name: CI Pipeline

on:
  pull_request:
    types: [opened, edited, reopened, synchronize]
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

  analysis:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Cache SonarQube scanner
        uses: actions/cache@v4
        with:
          path: ~/.sonar/native-sonar-scanner
          key: sonar-scanner-cache

      - name: Count lines of code with Cloc
        run: |
          sudo apt-get install -y cloc
          cloc src/ > cloc-report.txt
          cat cloc-report.txt

      - name: Run SonarQube analysis
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=freebie22_lab6
            -Dsonar.organization=freebie22-1
            -Dsonar.sources=src
            -Dsonar.host.url=https://sonarcloud.io
  review-check:
    if: github.event_name == 'pull_request' && github.base_ref == 'develop'
    runs-on: ubuntu-latest
    steps:
      - name: Перевірка наявності схваленого код-рев’ю
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            const approved = reviews.data.some(review => review.state === 'APPROVED');
            if (!approved) {
              core.setFailed("❌ Код-рев’ю не схвалено. Потрібне хоча б одне APPROVED рев’ю.");
            } else {
              console.log("✅ Є хоча б одне схвалене код-рев’ю.");
            }
